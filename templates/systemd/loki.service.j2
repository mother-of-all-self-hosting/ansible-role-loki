{#
SPDX-FileCopyrightText: 2023 Julian-Samuel GebÃ¼hr
SPDX-FileCopyrightText: 2023 - 2024 Slavi Pantaleev
SPDX-FileCopyrightText: 2024 Nikita Chernyi
SPDX-FileCopyrightText: 2025 Suguru Hirahara

SPDX-License-Identifier: AGPL-3.0-or-later
#}

[Unit]
Description=Loki time-series database ({{ loki_identifier }})
{% for service in loki_systemd_required_services_list %}
Requires={{ service }}
After={{ service }}
{% endfor %}
{% for service in loki_systemd_wanted_services_list %}
Wants={{ service }}
{% endfor %}
DefaultDependencies=no

[Service]
Type=simple
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} stop -t {{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ loki_identifier }} 2>/dev/null || true'
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ loki_identifier }} 2>/dev/null || true'

ExecStartPre={{ devture_systemd_docker_base_host_command_docker }} create \
      --rm \
      --name={{ loki_identifier }} \
      --log-driver=none \
      --user={{ loki_uid }}:{{ loki_gid }} \
      --cap-drop=ALL \
      --read-only \
      --network={{ loki_container_network }} \
      {% if loki_container_http_host_bind_port %}
      -p {{ loki_container_http_host_bind_port }}:{{ loki_server_http_listen_port }} \
      {% endif %}
      --env-file={{ loki_env_path }}/env \
      --label-file={{ loki_base_path }}/labels \
      --mount type=bind,src={{ loki_data_path }},dst=/loki \
      --mount type=bind,src={{ loki_config_path }},dst=/etc/loki,ro \
      {% for volume in loki_container_additional_volumes %}
      --mount type={{ volume.type | default('bind' if '/' in volume.src else 'volume') }},src={{ volume.src }},dst={{ volume.dst }}{{ (',' + volume.options) if volume.options else '' }} \
      {% endfor %}
      {{ loki_container_image }}

{% for network in loki_container_additional_networks %}
ExecStartPre={{ devture_systemd_docker_base_host_command_docker }} network connect {{ network }} {{ loki_identifier }}
{% endfor %}

ExecStart={{ devture_systemd_docker_base_host_command_docker }} start --attach {{ loki_identifier }}

ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} stop -t {{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ loki_identifier }} 2>/dev/null || true'
ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ loki_identifier }} 2>/dev/null || true'

Restart=always
RestartSec=30
SyslogIdentifier={{ loki_identifier }}

[Install]
WantedBy=multi-user.target
